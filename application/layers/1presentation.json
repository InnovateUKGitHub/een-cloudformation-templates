{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Layer 1 resources, Subnetx2 & ELB",
    "Parameters": {
        "VpcId": {
            "Type": "String",
            "Description": "The ID of the VPC",
            "Default": "vpc-30297455"
        },
        "vpcCidrPrefix": {
            "Type": "String",
            "Description": "The network part of the vpcCidrBlock. e.g. 10.10.",
            "Default": ""
        },
        "PublicHostedZoneID": {
            "Type": "String",
            "Description": "The Route53 public hosted zone id",
            "Default": "Z1QPR82ZQ4HWL9"
        },
        "PublicHostedZoneDomainName": {
            "Type": "String",
            "Description": "The Route53 public hosted zone domain name e.g. een.co.uk",
            "Default": "een.co.uk"
        },
        "PublicHostedZoneSubDomainName": {
            "Type": "String",
            "Description": "The subdomain name to be used for the public layer1 cname e.g. www (creates www.een.co.uk)",
            "Default": "www"
        },
        "InternetGatewayId": {
            "Type": "String",
            "Description": "The ID of the Internet Gateway",
            "Default": ""
        },
        "ProjectName": {
            "Type": "String",
            "Description": "The project name to be used",
            "Default": "een"
        },
        "EnvironmentName": {
            "Type": "String",
            "Description": "The environment name to be used",
            "Default": "production"
        },
        "ApplicationEnv": {
            "Type": "String",
            "Description": "The APPLICATION_ENV to be used",
            "Default": "production_een_aws"
        },
        "EC2KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair.",
            "Default": "ben.poole@bmbp"
        },
        "PublicSSLCertificateId": {
            "Type": "String",
            "Description": "'The ARN of the SSL certificate generated for layer 1 (public)"
        },
        "NotificationEMail": {
            "Description": "EMail address to notify if there are any scaling operations",
            "Default": "een@aerian.com",
            "Type": "String",
            "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
            "ConstraintDescription": "must be a valid email address."
        },
        "LayerName": {
            "Type": "String",
            "Description": "The name to be used for the first layer",
            "Default": "1presentation"
        },
        "Subnet1CidrBlock": {
            "Type": "String",
            "Description": "The subnet CidrBlock to cover access to all AZ subnets",
            "Default": "1.0/24"
        },
        "Subnet1aCidrBlock": {
            "Type": "String",
            "Description": "The subnet CidrBlock for AZ a",
            "Default": "1.0/26"
        },
        "Subnet1bCidrBlock": {
            "Type": "String",
            "Description": "The subnet CidrBlock for AZ b",
            "Default": "1.64/26"
        },
        "Subnet1EC2InstanceAmi": {
            "Description": "AMI to use for Layer 1 EC2 instances (Go oauth2_proxy)",
            "Type": "String",
            "Default": "ami-17fc7064"
        },
        "Subnet1EC2InstanceType": {
            "Description": "Type of EC2 instance to launch",
            "Type": "String",
            "Default": "m1.medium"
        },
        "Subnet1EC2AutoScaleGroupSizeMin": {
            "Default": "1",
            "Description": "The minimum size the EC2 AutoScale group will scale down to.",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "5",
            "ConstraintDescription": "must be between 1 and 5."
        },
        "Subnet1EC2AutoScaleGroupSizeMax": {
            "Default": "1",
            "Description": "The maximum size the EC2 AutoScale group can scale up to.",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "20",
            "ConstraintDescription": "must be between 1 and 20."
        },
        "Subnet1EC2AutoScaleNotificationTopicArn": {
            "Description": "Subnet1EC2AutoScaleNotificationTopicArn",
            "Type": "String",
            "Default": "arn:aws:sns:eu-west-1:853139206567:een-integration-stack-resources-AutoScaleNotificationTopic-N87RNMP39SRY"
        },
        "S3BucketLoggingName": {
            "Description": "Name of logging S3 bucket",
            "Type": "String",
            "Default": "logging-production-een"
        },
        "WhitelistEnabled": {
            "Type": "String",
            "Default": "true",
            "AllowedValues": ["true", "false"],
            "Description": "Should the IP Whitelist be applied? (firewall rules locking down HTTPS access to office IPs)"
        },
        "EC2SecurityGroupManagementVpcId": {
            "Type": "String",
            "Description": "The ID of the EC2 security groups which grants access from the management VPC."
        }
    },
    "Resources": {
        "subnet1a": {
            "Type": "AWS::CloudFormation::Stack",
            "Metadata": {
                "Comment": "Subnet, Route Table, Management VPCPeering Route & Internet Gateway Route in Availability Zone eu-west-1a.",
                "Version": "0.0.1"
            },
            "Properties": {
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/cloudformations-een-shared/een-v1/develop/application/resource-groups/subnets/public.json",
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "EnvironmentName": {
                        "Ref": "EnvironmentName"
                    },
                    "ApplicationEnv": {
                        "Ref": "ApplicationEnv"
                    },
                    "VpcId": {
                        "Ref": "VpcId"
                    },
                    "InternetGatewayId": {
                        "Ref": "InternetGatewayId"
                    },
                    "LayerName": {
                        "Ref": "LayerName"
                    },
                    "CidrBlock": {
                        "Fn::Join": ["", [{
                                    "Ref": "vpcCidrPrefix"
                                }, {
                                    "Ref": "Subnet1aCidrBlock"
                                }]]
                    },
                    "AvailabilityZone": "eu-west-1a",
                    "Name": "subnet1a"
                }
            }
        },
        "subnet1b": {
            "Type": "AWS::CloudFormation::Stack",
            "Metadata": {
                "Comment": "Subnet, Route Table, Management VPCPeering Route & Internet Gateway Route in Availability Zone eu-west-1b.",
                "Version": "0.0.1"
            },
            "Properties": {
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/cloudformations-een-shared/een-v1/develop/application/resource-groups/subnets/public.json",
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "EnvironmentName": {
                        "Ref": "EnvironmentName"
                    },
                    "ApplicationEnv": {
                        "Ref": "ApplicationEnv"
                    },
                    "VpcId": {
                        "Ref": "VpcId"
                    },
                    "InternetGatewayId": {
                        "Ref": "InternetGatewayId"
                    },
                    "LayerName": {
                        "Ref": "LayerName"
                    },
                    "CidrBlock": {
                        "Fn::Join": ["", [{
                                    "Ref": "vpcCidrPrefix"
                                }, {
                                    "Ref": "Subnet1bCidrBlock"
                                }]]
                    },
                    "AvailabilityZone": "eu-west-1b",
                    "Name": "subnet1b"
                }
            }
        },
        "elb1": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/cloudformations-een-shared/een-v1/develop/application/resource-groups/elbs/public.json",
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "EnvironmentName": {
                        "Ref": "EnvironmentName"
                    },
                    "ApplicationEnv": {
                        "Ref": "ApplicationEnv"
                    },
                    "VpcId": {
                        "Ref": "VpcId"
                    },
                    "LayerName": {
                        "Ref": "LayerName"
                    },
                    "SubnetCidrBlock": {
                        "Fn::Join": ["", [{
                                    "Ref": "vpcCidrPrefix"
                                }, {
                                    "Ref": "Subnet1CidrBlock"
                                }]]
                    },
                    "SubnetAId": {
                        "Fn::GetAtt": ["subnet1a", "Outputs.SubnetId"]
                    },
                    "SubnetBId": {
                        "Fn::GetAtt": ["subnet1b", "Outputs.SubnetId"]
                    },
                    "SubnetName": "subnet1",
                    "S3BucketLoggingName": {
                        "Ref": "S3BucketLoggingName"
                    },
                    "EC2KeyName": {
                        "Ref": "EC2KeyName"
                    },
                    "EC2InstanceAmi": {
                        "Ref": "Subnet1EC2InstanceAmi"
                    },
                    "EC2InstanceType": {
                        "Ref": "Subnet1EC2InstanceType"
                    },
                    "EC2AutoScaleGroupSizeMin": {
                        "Ref": "Subnet1EC2AutoScaleGroupSizeMin"
                    },
                    "EC2AutoScaleGroupSizeMax": {
                        "Ref": "Subnet1EC2AutoScaleGroupSizeMax"
                    },
                    "EC2AutoScaleNotificationTopicArn": {
                        "Ref": "Subnet1EC2AutoScaleNotificationTopicArn"
                    },
                    "EC2InstancePort": "80",
                    "EC2SecurityGroupManagementVpcId": {
                        "Ref": "EC2SecurityGroupManagementVpcId"
                    },
                    "PublicSSLCertificateId": {
                        "Ref": "PublicSSLCertificateId"
                    },
                    "EC2UserData": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash",
                                "",
                                "# apt base packages",
                                "sudo apt update",
                                "sudo apt upgrade",
                                "sudo apt install software-properties-common curl fail2ban",
                                "",
                                "# install lamp packages",
                                "sudo add-apt-repository ppa:ondrej/php -y",
                                "sudo apt update",
                                "sudo apt install -y apache2 php5.6 libapache2-mod-php php-gd php-pear php5.6-simplexml php5.6-cli php5.6-mbstring php5.6-curl php5.6-gd php5.6-pspell php5.6-xcache php5.6-xsl php5.6-mcrypt php5.6-mysql",
                                "",
                                "# disable php7 and enable php5.6",
                                "sudo a2dismod php7.0 ",
                                "sudo a2enmod php5.6 ",
                                "sudo ln -sfn /usr/bin/php5.6 /etc/alternatives/php",
                                "",
                                "# enable other apache mods",
                                "sudo a2enmod rewrite expires ssl proxy proxy_http ",
                                "",
                                "# disable default virtualhost",
                                "sudo a2dissite 000-default",
                                "",
                                "# php conf changes",
                                "sudo sed -i \"s@short_open_tag = Off@short_open_tag = On@\" /etc/php/5.6/apache2/php.ini",
                                "",
                                "# restart apache",
                                "sudo service apache2 restart"
                            ]
                        ]
                    }
                }
            }
        },
        "elasticsearch1": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3-eu-west-1.amazonaws.com/cloudformations-een-shared/een-v1/develop/application/resource-groups/elasticsearch.json",
                "TimeoutInMinutes": "60",
                "Parameters": {
                    "ProjectName": {
                        "Ref": "ProjectName"
                    },
                    "EnvironmentName": {
                        "Ref": "EnvironmentName"
                    },
                    "ApplicationEnv": {
                        "Ref": "ApplicationEnv"
                    },
                    "LayerName": {
                        "Ref": "LayerName"
                    },
                    "InstanceType": "t2.micro.elasticsearch"
                }
            }
        },
        "RecordSetGroup1": {
            "Type": "AWS::Route53::RecordSetGroup",
            "DependsOn": "elb1",
            "Properties": {
                "HostedZoneId": {
                    "Ref": "PublicHostedZoneID"
                },
                "RecordSets": [{
                        "Name": {
                            "Fn::Join": [".", [
                                    {
                                        "Ref": "PublicHostedZoneSubDomainName"
                                    },
                                    {
                                        "Ref": "PublicHostedZoneDomainName"
                                    }]]
                        },
                        "Type": "A",
                        "AliasTarget": {
                            "HostedZoneId": {
                                "Fn::GetAtt": ["elb1", "Outputs.HostedZoneId"]
                            },
                            "DNSName": {
                                "Fn::GetAtt": ["elb1", "Outputs.DNSName"]
                            }
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
    }
}
